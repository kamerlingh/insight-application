data = as.data.frame(seq(as.Date("1990-01-01"), as.Date("2013-12-31"), by="day"))
names(data)="date"
summary(data)
head(data)
data$month = substring(data$date, 6,7)
head(data)
data$year = substring(data$date,1,4)
data$snow_lying = round(rnorm(dim(data)[1], mean=0.5, sd=0.1))
head(data)
tapply(data$snow_lying,data$month,sum)
tapply(data$snow_lying,list(data$month,data$year),sum)
tapply(data$snow_lying,c(data$month,data$year),sum)
list(1,2)
c(1,2)
Orange
tapply(Orange$circumference,Orange$Tree,max)
tapply(Orange$circumference,Orange$Tree,max, simplify=TRUE)
tapply(Orange$circumference,Orange$Tree,max, simplify=FALSE)
?Orange
?datasets
library(help="datasets")
summary(LakeHuron)
head(LakeHuron)
names(LakeHuron)
dim(LakeHuron)
dim(Orange)
class(LakeHuron)
?ts
length(LakeHuron)
1972-1875
plot(LakeHuron)
for(x in 1:5){print(x)}
I=rep(0,100)
I
I[8]
source('~/.active-rstudio-document')
I
plot(I)
source('~/.active-rstudio-document')
plot(I)
source('~/.active-rstudio-document')
plot(I)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
plot(I)
source('~/.active-rstudio-document')
plot(I)
source('~/pset7problem3.R')
y <- 4
getwd()
ls()
SPE470 <- read.csv('SPE470')
SPE470 <- read.csv('SPE470.csv')
class(SPE470)
summary(SPE470)
head(SPE470)
plot(SPE470[,2], SPE470[,3])
SPE470 <- read.csv('SPE470.csv')
plot(SPE470[,2], SPE470[,3])
R1 <- tapply(SPE470[,2],SPE470[,1],mean)
R1
class(R1)
R1_test <- as.list(R1)
R1_test
squares <- list(1,2)
squares
R1
R1_test
R1_test <- as.vector(R1)
R1_test
squares <- c(1250, 500, 2475, 833.333, 2000,625, 487.5,4968.75)
R1sheet <- R1_test/squares
R1sheet
10000*32/160
R2 <- as.list(tapply(SPE470[,3],SPE470[,1],mean))
R2
R2sheet <- R2/squares
R2 <- as.vector(R2)
R2sheet <- R2/squares
R2
R2 <- tapply(SPE470[,3],SPE470[,1],mean)
R2
class(R2)
R2_test <- as.list(R2)
R2_test
R2_test <- as.vector(R2_test)
R2_test
dim(R2_test)
dim(R1_test)
R1_test
R1
R1_test2 <- as.vector(R1)
R1_test2
R2_test2 <- as.vector(R2)
R2_test2
R2sheet <- R2_test2/squares
R2sheet
R1sheet
difference <- (R2sheet-R1sheet)/R1sheet
difference
plot(c(50,50,50,39,397.5,594,640,500), c(1.1,1.12,1.66,0.77,1.87,1.24,2.27,1.25))
plot(c(833.3,625,500, 487.5, 4968.75,2475,2000,1250), c(1.1,1.12,1.66,0.77,1.87,1.24,2.27,1.25))
plot(c(833.3,625,500, 487.5, 4968.75,2475,2000,1250), c(1.1,1.12,1.66,0.77,1.87,1.24,2.27,1.25), xlab='squares',ylab='percent change')
library(swirl)
rm(list=ls())
install_from_swirl("Getting and Cleaning Data")
swirl()
mydf <- read.csv(path2csv, stringsAsFactors=FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package,country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(X:size))
filter(cran, package=="swirl")
filter(cran, r_version=="3.1.1", country=="US")
?Comparison
filter(cran, r_version<="3.0.2", country=="IN")
filter(cran, country=="IN"|country=="IN")
filter(cran, country=="US"|country=="IN")
filter(cran,size > 100500, r_os == "linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id)
)
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size/2^20)
mutate(cran3, size_mb = size/2^20, size_gb = size_mb/2^10)
mutate(cran3, correct_size = size+1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
?dplyr
?select
?arrange
iris2 <- select(iris, 1:4)
iris2
iris2 <- select(iris, Sepal.Length, Petal.Length)
head(iris2)
arrange(iris2, desc(Petal.Length))
iris3 <- arrange(iris2, desc(Petal.Length))
plot(iris3$Sepal.Length)
?mutate
iris4 <- mutate(iris3, Petal.Inches = Petal.Length*2.2)
head(iris4)
iris5 <- transmute(iris4, Petal.Inch <- Petal.Inches/(2.2*2.2))
head(iris5)
?summary
summary(iris5, mean(Petal.Inches))
summary(iris5)
summary(iris5, mean)
ls()
file.exists("iris5")
?dir.remove
?download.file
head(iris,10)
head(iris, nrows=10)
head(iris, nrow=10)
?head
head(iris, n=10L)
head(iris, n=10)
x<-1:4
p <- x/sum(x)
p
(0.1+0.2+0.3+0.4)/4
mean(p)
(0.1*1+0.2*2+0.3*3+0.4*4)/4
(0.1*1+0.2*2+0.3*3+0.4*4)
(0.75*0.3)/((0.75*0.3)+(0.48*0.7))
getwd()
ls()
setwd("~/Insight")
ls()
rm(list=ls())
ls
ls()
?read.xlsx
library(xlsx)
?read.xlsx
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
head(sample_data)
names(sample_data) <- c('id', 'substrate', 'thickness', 'Rs', 'tdep')
head(sample_data)
test <- head(sample_data)
test
res<-test[,3]==0
res
res<-!(test[,3]==0)
res
res2 <- !(test[,4]==0 && test[,3]==0)
res2
res2 <- !(test[,4]==0)
res2
res3 <- res + res2
res3
res3 <- res && res2
res3
?&&
res3 <- res AND res2
res3 <- res * res2
res3
res3 <- res & res2
res3
res3 <- !(test[,3]==0 & test[,4]==0)
res3
res3 <- !(test[,3]==0 | test[,4]==0)
res3
test[!(apply(test, 1, function(y) any(y == 0))),]
test[!(apply(test, 1, function(y) any(y == 0.0000))),]
test <- head(sample_data, nrows=10)
test
test <- head(sample_data, nrow=10)
test
test <- head(sample_data, n=10)
test
test[!(apply(test, 1, function(y) any(y == 0))),]
test[!(apply(test, 2, function(y) any(y == 0))),]
test[!(apply(test, 0, function(y) any(y == 0))),]
test[!(apply(test, 3, function(y) any(y == 0))),]
test[!(apply(test, 2, function(y) any(y == 0))),]
test[!(apply(test, 1, function(y) any(y == 0))),]
test <- head(sample_data, n=10)
test
test1 <- apply(test, 1, function(row) all(row != 0))
test1
class(test[,4])
class(0.000)
class(0)
0==0.0000
class(test[2,4])
test[2,4]==0
test[which(data==0)] = NA_character_
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
length(complete)
complete[1:5]
complete[1:10]
sample_data[complete]
sample_data[complete,]
complete_data<-sample_data[complete,]
table(complete_data)
table(complete_data[,2])
source('~/.active-rstudio-document')
?complete.cases
test <- complete.cases(sample_data)
length(test)
dim(sample_data)
sample_data
sample_data[NA.3,]
class(<NA>)
class(sample_data[,3])
class(sample_data[,4])
class(sample_data[,5])
class(sample_data[,2])
?read.xlsx
test <- as.numeric(sample_data[,3])
test
sample_data[,3]
sample_data[2,3]
as.numeric(sample_data[2,3])
as.character(sample_data[2,3])
as.numeric(as.character(sample_data[2,3]))
test <- as.numeric(as.character(sample_data[2,3]))
test
test <- as.numeric(as.character(sample_data[,3]))
test
complete <- !(is.na(as.numeric(as.character(sample_data[,3])))
)
complete
sample_data <- sample_data[complete,]
dim(sample_data)
sample_data
class(sample_data[,3])
as.numeric(sample_data[,3])
sample_data[,3] <- as.numeric(as.character(sample_data[,3]))
class(sample_data[,3])
sample_data
correct_range <- sample_data[,3]<=10
correct_range
source('~/.active-rstudio-document')
sample_data
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
sample_data
table(sample_data[,2])
class(sample_data[,2])
library(dplyr)
?change
wrong_label <- sample_data[,2]=="Sinx"
wrong_label
sample_data[wrong_label,]
sample_data[wrong_label,][,2]=="SiNx"
sample_data[wrong_label,][,2] <- "SiNx"
sample_data[wrong_label,][,2]
table(sample_data[,2])
source('~/.active-rstudio-document')
table(sample_data[,2])
plot(sample_data$Rs, sample_data$thickness)
plot(sample_data$Rs, sample_data$tdep)
plot(sample_data$tdep, 1/sample_data$Rs)
Rs_inv <- 1/sample_data$Rs
Rs_inv
plot(sample_data$tdep, Rs_inv)
plot(sample_data$tdep, Rs_inv, type='p')
class(sample_data$tdep)
sample_data[,5] <- as.numeric(as.character(sample_data[,5]))
sample_data
class(sample_data$tdep)
source('~/.active-rstudio-document')
?mutate
mutate(sample_data, Rs_inv = 1/Rs)
source('~/Insight/loading_sample_data.R')
sample_data
mutate(sample_data, Rs_inv = 1/Rs)
source('~/.active-rstudio-document')
sample_data
?with
with(sample_data, plot(tdep, Rs_inv))
with(sample_data, plot(thickness, Rs_inv))
with(sample_data, plot(thickness, Rs_inv, xlab="thickness (nm)", ylab="inverse Rs (\Omega)"))
with(sample_data, plot(thickness, Rs_inv, xlab="thickness (nm)", ylab="inverse Rs ($\Omega$"))
with(sample_data, plot(thickness, Rs_inv, xlab="thickness (nm)", ylab=expression(\Omega))
with(sample_data, plot(thickness, Rs_inv, xlab="thickness (nm)", ylab=expression(\Omega)))
with(sample_data, plot(thickness, Rs_inv, xlab="thickness (nm)", ylab=expression(Omega)))
with(sample_data, plot(thickness, Rs_inv, ylab=expression(inverse R_{S} Omega)))
with(sample_data, plot(thickness, Rs_inv, ylab=expression(inverse R Omega)))
with(sample_data, plot(thickness, Rs_inv, ylab=expression(Omega\box)))
with(sample_data, plot(thickness, Rs_inv, ylab=expression(R_S)))
with(sample_data, plot(thickness, Rs_inv, ylab=expression(R^S)))
with(sample_data, plot(thickness, Rs_inv, ylab=expression(paste("inverse sheet resistance", Omega))))
with(sample_data, plot(thickness, Rs_inv, ylab=expression(paste("inverse sheet resistance (", Omega, ")"))))
?plotmath
with(sample_data, plot(thickness, Rs_inv, ylab=expression(paste("inverse sheet resistance (", %/%Omega, ")"))))
with(sample_data, plot(thickness, Rs_inv, ylab=expression(paste("inverse sheet resistance (", 1/Omega, ")"))))
?plotmath
with(sample_data, plot(thickness, Rs_inv, ylab=expression(paste("inverse sheet resistance (", symbol(m)/Omega, ")"))))
?plotmath
TestChars(font=5)
with(sample_data, plot(thickness, Rs_inv, ylab=expression(paste("inverse sheet resistance (", symbol(0)/Omega, ")"))))
with(sample_data, plot(thickness, Rs_inv, ylab=expression(paste("inverse sheet resistance (", pch(0)/Omega, ")"))))
with(sample_data, plot(thickness, Rs_inv, ylab=expression(paste("inverse sheet resistance (", Omega/sq, ")"))))
with(sample_data, plot(thickness, Rs_inv, ylab=expression(paste("inverse sheet resistance (", Omega/sq^-1, ")"))))
with(sample_data, plot(thickness, Rs_inv, ylab=expression(paste("inverse sheet resistance (", Omega/sq, ")",^-1))))
with(sample_data, plot(thickness, Rs_inv, ylab=expression(paste("inverse sheet resistance (", (Omega/sq)^-1, ")",))))
with(sample_data, plot(thickness, Rs_inv, ylab=expression(paste("inverse sheet resistance ", (Omega/sq)^-1))))
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
with(sample_data, plot(tdep, Rs_inv,
xlab="deposition time (seconds)",
ylab=expression(paste("inverse sheet resistance ", (Omega/sq)^-1))
))
with(sample_data, plot(thickness, Rs_inv,
xlab="thickness (nm)",
ylab=expression(paste("inverse sheet resistance ", (Omega/sq)^-1))
))
plot(sample_data$thickness, sample_data$Rs_inv, type=n)
plot(sample_data$thickness, sample_data$Rs_inv, type="n")
plot(sample_data$thickness, sample_data$Rs_inv, type="n",
xlab="thickness (nm)",
ylab=expression(paste("inverse sheet resistance ", (Omega/sq)^-1))
)
with(sample_data$substrate="MgO", plot(thickness, Rs_inv))
with(sample_data$substrate=="MgO", plot(thickness, Rs_inv))
with(sample_data$substrate[["MgO"]], plot(thickness, Rs_inv))
with(sample_data$substrate["MgO"], plot(thickness, Rs_inv))
with(sample_data$substrate[2], plot(thickness, Rs_inv))
with(sample_data$substrate[1], plot(thickness, Rs_inv))
with(sample_data[which(sample_data$substrate="MgO"),], plot(thickness, Rs_inv))
with(sample_data[which(sample_data$substrate=="MgO"),], plot(thickness, Rs_inv))
with(sample_data[which(sample_data$substrate=="SiNx"),], plot(thickness, Rs_inv, col="red"))
plot(sample_data$thickness, sample_data$Rs_inv, type="n",
xlab="thickness (nm)",
ylab=expression(paste("inverse sheet resistance ", (Omega/sq)^-1))
)
with(sample_data[which(sample_data$substrate="MgO"),], plot(thickness, Rs_inv))
with(sample_data[which(sample_data$substrate=="MgO"),], plot(thickness, Rs_inv))
plot(sample_data$thickness, sample_data$Rs_inv, type="n",
xlab="thickness (nm)",
ylab=expression(paste("inverse sheet resistance ", (Omega/sq)^-1))
)
with(sample_data[which(sample_data$substrate=="MgO"),], points(thickness, Rs_inv))
with(sample_data[which(sample_data$substrate=="SiNx"),], points(thickness, Rs_inv, col="red"))
source('~/.active-rstudio-document')
table(sample_data[,2])
source('~/.active-rstudio-document')
with(sample_data[which(sample_data$substrate=="Al203"),], plot(thickness, Rs_inv, col="blue"))
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
with(sample_data, plot(tdep, Rs_inv,
xlab="deposition time (seconds)",
ylab=expression(paste("inverse sheet resistance ", (Omega/sq)^-1))
))
source('~/.active-rstudio-document')
par(mfrow=c(1,1))
with(sample_data, plot(tdep, Rs_inv,
xlab="deposition time (seconds)",
ylab=expression(paste("inverse sheet resistance ", (Omega/sq)^-1))
))
with(sample_data, plot(thickness, Rs_inv,
xlab="thickness (nm)",
ylab=expression(paste("inverse sheet resistance ", (Omega/sq)^-1))
))
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
plot(dep_MgO.fit)
?glm
plot(dep_MgO.fit)
?lm
source('~/.active-rstudio-document')
plot(dep_MgO.fit)
source('~/.active-rstudio-document')
plot(dep_Glass.fit)
plot(dep_Glass.fit)
source('~/.active-rstudio-document')
plot(dep_Glass.fit)
source('~/.active-rstudio-document')
str(dep_MgO.fit)
summary(dep_MgO.fit)
source('~/.active-rstudio-document')
dep_MgO.fit <- glm(Rs_inv ~ tdep, data=sample_data[which(sample_data$substrate=="MgO"),])
with(sample_data, plot(tdep, Rs_inv,
xlab="deposition time (seconds)",
ylab=expression(paste("inverse sheet resistance ", (Omega/sq)^-1))
))
with(sample_data, plot(thickness, Rs_inv,
xlab="thickness (nm)",
ylab=expression(paste("inverse sheet resistance ", (Omega/sq)^-1))
))
fits <- tapply(sample_data, sample_data$substrate, glm)
lines(dep_Glass.fit)
abline(dep_Glass.fit)
source('~/.active-rstudio-document')
plot(tdep, Rs_inv,
xlab="deposition time (seconds)",
ylab=expression(paste("inverse sheet resistance ", (Omega/sq)^-1))
))
with(sample_data, plot(tdep, Rs_inv,
xlab="deposition time (seconds)",
ylab=expression(paste("inverse sheet resistance ", (Omega/sq)^-1))
))
abline(dep_Glass.fit)
abline(dep_MgO.fit)
abline(dep_Glass.fit)
abline(dep_SiNx.fit)
abline(dep_Al2O3.fit)
with(sample_data, plot(thickness, Rs_inv,
xlab="thickness (nm)",
ylab=expression(paste("inverse sheet resistance ", (Omega/sq)^-1))
))
source('~/.active-rstudio-document')
abline(thickness_Glass.fit)
abline(thickness_Al2O3.fit)
abline(thickness_SiNx.fit)
abline(thickness_MgO.fit)
summary(thickness_MgO.fit)
summary(dep_MgO.fit)
source('~/Insight/exploratory_plots.R')
with(sample_data[which(sample_data$substrate=="Al2O3"),], points(thickness, Rs_inv, col="blue"))
with(sample_data[which(sample_data$substrate=="Al2O3"),], plot(thickness, Rs_inv, col="blue"))
with(sample_data[which(sample_data$substrate=="Al2O3"),], plot(tdep, Rs_inv, col="blue"))
source('~/.active-rstudio-document')
xlab="??"
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
?par
source('~/.active-rstudio-document')
summary(thickness_Al2O3.fit)
summary(dep_Al2O3.fit)
summary(dep_Glass.fit)
summary(thickness_Glass.fit)
summary(thickness_SiNx.fit)
summary(dep_SiNx.fit)
source('~/.active-rstudio-document')
xlab("??")
title("??")
xlabel("??")
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/Insight/exploratory_plots.R')
source('~/Insight/linear_regression.R')
